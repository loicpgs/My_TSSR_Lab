# üõ†Ô∏è Journal de Progression : Auto-formation Syst√®me & R√©seau  
**Date de d√©but** : 21 mai 2025  
**Rythme** : ~4 jours/semaine, 3‚Äì4 heures par session  
**Date actuelle** : 17 juin 2025

---

## Semaine 1 : 21 ‚Äì 24 mai

### ‚úÖ Installation des outils de base
- Installation des outils essentiels pour l‚Äôadministration r√©seau et syst√®me :
  - Oracle VirtualBox
  - PuTTY
  - Advanced IP Scanner
  - Wireshark
- Premiers tests et d√©couverte de l‚Äôinterface de chaque outil.
- Visionnage de tutoriels pour comprendre leur utilit√©.
- Mise en place d‚Äôun environnement de travail de base.

---

## Semaine 2 : 26 ‚Äì 30 mai

### üñ•Ô∏è Introduction √† Linux & Terminal
- Apprentissage des commandes Linux de base :
  - `ls`, `cd`, `pwd`, `mkdir`, `touch`, `rm`, `cp`, `mv`
  - Gestion des permissions : `chmod`, `chown`, `ls -l`
- Utilisation d‚Äôun terminal local Linux (ou WSL).
- Premiers scripts Bash tr√®s simples.
- Compr√©hension des chemins absolus/relatifs.
- D√©couverte de la gestion des processus : `top`, `ps`, `kill`, `htop`

---

## Semaine 3 : 2 ‚Äì 6 juin

### üß™ Installation et configuration de machines virtuelles
- Installation d‚Äôune VM Ubuntu Server avec VirtualBox.
- Cr√©ation de snapshots et tests de restauration.
- Installation d‚Äôune VM Windows 10 √©galement.
- Compr√©hension des param√®tres mat√©riels : RAM, CPU, cartes r√©seau.
- Tests r√©seau de base dans la VM :
  - R√©cup√©ration IP avec `ip a`, test `ping`
  - Connexion SSH depuis Windows vers Ubuntu via PuTTY

---

## Semaine 4 : 9 ‚Äì 13 juin

### üéÆ OverTheWire : Bandit + Pratique Bash
- D√©but du jeu **Bandit** sur OverTheWire pour s‚Äôentra√Æner au terminal.
- Progression du **niveau 0 au niveau 12** :
  - Utilisation de `cat`, `file`, `find`, `grep`, `base64`, `cut`, `xxd`, `strings`, et les pipes `|`
  - Navigation dans des fichiers cach√©s, avec permissions sp√©ciales ou contenu binaire.
- Renforcement de la logique shell et de la compr√©hension du syst√®me de fichiers Linux.

---

## Semaine 5 : 14 ‚Äì 17 juin

### ‚öôÔ∏è Vagrant, GitHub et VM automatis√©e
- Installation et prise en main de **Vagrant** :
  - Cr√©ation d‚Äôun fichier `Vagrantfile` pour configurer une VM Ubuntu automatiquement.
  - Utilisation des commandes : `vagrant up`, `vagrant halt`, `vagrant ssh`, etc.
- Premiers pas avec Git et GitHub :
  - Cr√©ation d‚Äôun d√©p√¥t GitHub
  - Initialisation du d√©p√¥t local, `git add`, `git commit`, `git push`
- Tentative de **push d‚Äôune VM pr√™te √† l‚Äôemploi (cl√© en main)** sur GitHub avec Vagrant.
- D√©bogage d‚Äôerreurs (box introuvable, SSH par mot de passe obsol√®te).
- Apprentissage de la gestion des erreurs Vagrant et du `.gitignore` pour ne pas versionner les fichiers lourds inutiles.

---

## üß† Bilan au 17 juin

| Domaine                   | Progr√®s accompli                     |
|---------------------------|--------------------------------------|
| Linux/Bash                | Bases solides, Bandit niveau 12      |
| Virtualisation            | VMs fonctionnelles (VirtualBox + Vagrant) |
| Outils r√©seau             | Install√©s et explor√©s                |
| GitHub                    | Utilisation basique + push en cours |
| D√©bogage / Autonomie      | Capacit√© √† r√©soudre erreurs seul     |

---

## üìÖ Prochaines √©tapes
- Continuer Bandit jusqu‚Äôau niveau 20+
- Mettre en r√©seau deux VMs pour des tests (ping, transfert de fichiers)
- D√©couvrir `netstat`, `tcpdump`, `nmap`, etc.
- Finaliser le push d‚Äôune VM compl√®te sur GitHub
- Apprendre √† installer et configurer des services : SSH, FTP, Apache, Samba

# Journal de progression ‚Äì 19/06/2025

## R√©sum√©

Aujourd‚Äôhui, j‚Äôai nettoy√© mon dossier de projet local pour supprimer les fichiers parasites li√©s √† Vagrant et j‚Äôai cr√©√© un dossier propre nomm√© `VM-TSSR` sur mon Bureau. J‚Äôai initialis√© une nouvelle VM Ubuntu 22.04 LTS avec Vagrant, accompagn√©e d‚Äôun script de provisioning automatis√© installant des outils essentiels comme curl, vim, net-tools, htop et openssh-server.

J‚Äôai commit√© les fichiers initiaux (`Vagrantfile`, `provision.sh`, `.gitignore`, `README.md`) et li√© le d√©p√¥t local √† mon d√©p√¥t distant GitHub √† l‚Äôadresse `https://github.com/loicpgs/VM-TSSR.git`.

Apr√®s avoir r√©solu un conflit de fusion d√ª √† un README d√©j√† pr√©sent sur GitHub, j‚Äôai r√©ussi √† pousser tous les commits vers le d√©p√¥t distant. J‚Äôai aussi supprim√© un fichier de script de provisioning vide cr√©√© par erreur et v√©rifi√© que les bons fichiers sont bien pr√©sents sur GitHub.

## D√©tails

- Cr√©ation et navigation dans un dossier de projet propre `VM-TSSR`.
- Initialisation de Vagrant avec la box Ubuntu Jammy 22.04.
- Cr√©ation du script `provision.sh` avec les commandes d‚Äôinstallation des paquets.
- Ajout d‚Äôun fichier `.gitignore` pour exclure le dossier `.vagrant/` et d‚Äôautres fichiers inutiles.
- R√©solution des conflits Git avec la commande `git pull --allow-unrelated-histories`.
- Validation des commits et push vers GitHub.
- V√©rification de la correspondance entre d√©p√¥t local et d√©p√¥t distant.
- Suppression du fichier `.provision.sh` inutile.

## Prochaines √©tapes

- Poursuivre l‚Äôexploration des commandes Linux dans la VM.
- Pratiquer la configuration r√©seau et le partage de fichiers entre l‚Äôh√¥te et la VM.
- Avancer dans les challenges OverTheWire Bandit.
- Am√©liorer les scripts de provisioning et automatiser des t√¢ches.

---

*Commit et push effectu√©s le 19/06/2025*  


# Journal de progression ‚Äì 20/06/2025

## Objectif du jour  
Repartir d‚Äôun environnement Vagrant propre, corriger le provisioning et le README, et s√©curiser le d√©p√¥t GitHub.

## Actions r√©alis√©es

1. **Nettoyage et consolidation des projets Vagrant**  
   - Suppression des VM et dossiers obsol√®tes (`vagrant destroy`, `global-status --prune`)  
   - Choix d‚Äôun unique dossier de travail `test-vm` sur le Bureau

2. **Mise √† jour du script de provisioning (`provision.sh`)**  
   - Recr√©ation d‚Äôun script propre en UTF‚Äë8/LF  
   - Installation automatis√©e de :  
     - Outils CLI (`curl`, `vim`, `net-tools`, `htop`, `openssh-server`)  
     - Services : Apache2, Samba, UFW  
   - Activation et configuration des services (Apache, Samba, pare‚Äëfeu UFW)

3. **Vagrantfile optimis√©**  
   - Provisionnement externe li√© √† `provision.sh`  
   - Forwarding des ports 80‚Üí8080 et 22‚Üí2222  

4. **Validation en VM**  
   - `vagrant up` + `vagrant provision`  
   - V√©rification dans la VM :  
     - `apache2 -v`, `smbd --version`, `sudo ufw status`  
     - Tous les services et outils install√©s et op√©rationnels  

5. **Git & GitHub**  
   - S√©paration des commits (`README.md`, `provision.sh`) pour un historique propre  
   - Rebase interactif pour corriger le message du commit `provision.sh`  
   - Passage du d√©p√¥t en mode **priv√©** sur GitHub  

## R√©sultat  
Un d√©p√¥t GitHub s√©curis√© et priv√©, √† jour, contenant :  
- `Vagrantfile` et `provision.sh` fonctionnels  
- `README.md` document√©  
- `.gitignore` configur√©  

## Prochaines √©tapes  
- Automatiser la cr√©ation de snapshots VM  
- Ajouter des exercices de configuration r√©seau  
- Poursuivre la documentation des commandes et workflows  




